{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Definition for singly-linked list.\
# class ListNode(object):\
#     def __init__(self, val=0, next=None):\
#         self.val = val\
#         self.next = next\
class Solution(object):\
    def reorderList(self, head):\
        """\
        :type head: ListNode\
        :rtype: None Do not return anything, modify head in-place instead.\
        """\
        if head==None:\
            return head\
        slow,fast =head,head.next\
        while fast and fast.next:\
            slow=slow.next\
            fast=fast.next.next\
        \
        #print(slow.val)\
        secondlist=self.reverse(slow.next)\
        slow.next=None\
        #print("ss",secondlist.val)\
        curr=head\
        #print("heads",head.val)\
        while secondlist:\
            #print("here2")\
            next1=curr.next\
            next2=secondlist.next\
            curr.next=secondlist\
            secondlist.next=next1\
            curr=next1\
            secondlist=next2\
        \
        return head\
        \
    def reverse(self, head):\
        \
        #print("here", head.val,head.next.val)\
        prev=None\
        #fut=head\
        while head:\
            next=head.next\
            head.next=prev\
            prev=head\
            head=next\
        \
        #print (prev.val,prev.next.val)\
        return prev\
    \
    \
        \
        }