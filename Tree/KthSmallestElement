# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def kthSmallest(self, root, k):
        """
        :type root: TreeNode
        :type k: int
        :rtype: int
        """
        #Inorder Traversal
        n=0 
        stack=[]
        cur=root
        
        while cur or stack:
            while cur:
                stack.append(cur)
                cur=cur.left
            
            cur=stack.pop()
            n+=1
            if n==k:
                return cur.val
            
            cur=cur.right
        
#         height=self.findHeight(root)
#         print(height)
#         for i in range(height-k):
#             root=root.left
        
#         return root.val
    
#     def findHeight(self,root):
        
#         if root is None:
#             return 0
        
#         return 1+self.findHeight(root.left)
        